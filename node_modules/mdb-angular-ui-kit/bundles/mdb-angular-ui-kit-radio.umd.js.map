{"version":3,"file":"mdb-angular-ui-kit-radio.umd.js","sources":["../../../projects/mdb-angular-ui-kit/radio/radio-button.directive.ts","../../../projects/mdb-angular-ui-kit/radio/radio-group.directive.ts","../../../projects/mdb-angular-ui-kit/radio/radio.module.ts","../../../projects/mdb-angular-ui-kit/radio/mdb-angular-ui-kit-radio.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, HostBinding, Input } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbRadio]',\n})\nexport class MdbRadioDirective {\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  private _name: string;\n\n  @Input('checked')\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  @Input('value')\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n  private _value: any = null;\n\n  @Input('disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @HostBinding('disabled')\n  get isDisabled(): boolean {\n    return this._disabled;\n  }\n\n  @HostBinding('checked')\n  get isChecked(): boolean {\n    return this._checked;\n  }\n\n  @HostBinding('attr.name')\n  get nameAttr(): string {\n    return this.name;\n  }\n\n  constructor() {}\n\n  _updateName(value: string): void {\n    this._name = value;\n  }\n\n  _updateChecked(value: boolean): void {\n    this._checked = value;\n  }\n\n  _updateDisabledState(value: boolean): void {\n    this._disabled = value;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { from, Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { MdbRadioDirective } from './radio-button.directive';\n\nexport const MDB_RADIO_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbRadioGroupDirective),\n  multi: true,\n};\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbRadioGroup]',\n  providers: [MDB_RADIO_GROUP_VALUE_ACCESSOR],\n})\nexport class MdbRadioGroupDirective implements ControlValueAccessor, AfterContentInit, OnDestroy {\n  @ContentChildren(MdbRadioDirective, { descendants: true }) radios: QueryList<MdbRadioDirective>;\n\n  @Input()\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n    if (this.radios) {\n      this._updateChecked();\n    }\n  }\n  private _value: any;\n\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n    if (this.radios) {\n      this._updateNames();\n    }\n  }\n  private _name: string;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n\n    if (this.radios) {\n      this._updateDisabled();\n    }\n  }\n  private _disabled = false;\n\n  private _destroy$ = new Subject<void>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  ngAfterContentInit(): void {\n    this._updateNames();\n    this._updateDisabled();\n\n    this.radios.changes\n      .pipe(\n        startWith(this.radios),\n        switchMap((radios: QueryList<MdbRadioDirective>) => from(Promise.resolve(radios))),\n        takeUntil(this._destroy$)\n      )\n      .subscribe(() => this._updateRadiosState());\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _updateRadiosState(): void {\n    this._updateNames();\n    this._updateChecked();\n    this._updateDisabled();\n  }\n\n  private _updateNames(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => radio._updateName(this.name));\n  }\n\n  private _updateChecked(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => {\n      const isChecked = radio.value === this._value;\n      radio._updateChecked(isChecked);\n    });\n  }\n\n  private _updateDisabled(): void {\n    this.radios.forEach((radio: MdbRadioDirective) => radio._updateDisabledState(this._disabled));\n  }\n\n  // Control value accessor methods\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateDisabled();\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n}\n","import { MdbRadioDirective } from './radio-button.directive';\nimport { MdbRadioGroupDirective } from './radio-group.directive';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [MdbRadioDirective, MdbRadioGroupDirective],\n  exports: [MdbRadioDirective, MdbRadioGroupDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class MdbRadioModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["coerceBooleanProperty","Directive","Input","HostBinding","NG_VALUE_ACCESSOR","forwardRef","Subject","startWith","switchMap","from","takeUntil","ContentChildren","NgModule","CommonModule","FormsModule"],"mappings":"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"}