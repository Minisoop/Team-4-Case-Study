{"version":3,"file":"mdb-angular-ui-kit-checkbox.umd.js","sources":["../../../projects/mdb-angular-ui-kit/checkbox/checkbox.directive.ts","../../../projects/mdb-angular-ui-kit/checkbox/checkbox.module.ts","../../../projects/mdb-angular-ui-kit/checkbox/mdb-angular-ui-kit-checkbox.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  Directive,\n  HostBinding,\n  HostListener,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const MDB_CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbCheckboxDirective),\n  multi: true,\n};\n\nexport class MdbCheckboxChange {\n  element: MdbCheckboxDirective;\n  checked: boolean;\n}\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbCheckbox]',\n  providers: [MDB_CHECKBOX_VALUE_ACCESSOR],\n})\nexport class MdbCheckboxDirective {\n  @Input('checked')\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  @Input('value')\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n  private _value: any = null;\n\n  @Input('disabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  @Output() checkboxChange: EventEmitter<MdbCheckboxChange> = new EventEmitter<MdbCheckboxChange>();\n\n  @HostBinding('disabled')\n  get isDisabled(): boolean {\n    return this._disabled;\n  }\n\n  @HostBinding('checked')\n  get isChecked(): boolean {\n    return this._checked;\n  }\n\n  @HostListener('click')\n  onCheckboxClick(): void {\n    this.toggle();\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  constructor() {}\n\n  get changeEvent(): MdbCheckboxChange {\n    const newChangeEvent = new MdbCheckboxChange();\n    newChangeEvent.element = this;\n    newChangeEvent.checked = this.checked;\n    return newChangeEvent;\n  }\n\n  toggle(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._checked = !this._checked;\n    this.onChange(this.checked);\n    this.onCheckboxChange();\n  }\n\n  onCheckboxChange(): void {\n    this.checkboxChange.emit(this.changeEvent);\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MdbCheckboxDirective } from './checkbox.directive';\n\n@NgModule({\n  declarations: [MdbCheckboxDirective],\n  exports: [MdbCheckboxDirective],\n  imports: [CommonModule, FormsModule],\n})\nexport class MdbCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","coerceBooleanProperty","Directive","Input","Output","HostBinding","HostListener","NgModule","CommonModule","FormsModule"],"mappings":"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"}