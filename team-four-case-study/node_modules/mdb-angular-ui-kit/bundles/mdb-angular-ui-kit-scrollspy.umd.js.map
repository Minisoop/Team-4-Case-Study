{"version":3,"file":"mdb-angular-ui-kit-scrollspy.umd.js","sources":["../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-link.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.service.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-element.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-window.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.module.ts","../../../projects/mdb-angular-ui-kit/scrollspy/mdb-angular-ui-kit-scrollspy.ts"],"sourcesContent":["import {\n  Directive,\n  OnInit,\n  Input,\n  HostListener,\n  HostBinding,\n  ChangeDetectorRef,\n  Inject,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyLink]',\n})\nexport class MdbScrollspyLinkDirective implements OnInit {\n  @Input()\n  get scrollIntoView(): boolean {\n    return this._scrollIntoView;\n  }\n  set scrollIntoView(value: boolean) {\n    this._scrollIntoView = value;\n  }\n  private _scrollIntoView = true;\n\n  get section(): HTMLElement {\n    return this._section;\n  }\n  set section(value: HTMLElement) {\n    if (value) {\n      this._section = value;\n    }\n  }\n  private _section: HTMLElement;\n  private _id: string;\n\n  constructor(private cdRef: ChangeDetectorRef, @Inject(DOCUMENT) private document: any) {}\n\n  @Input('mdbScrollspyLink')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  @HostBinding('class.scrollspy-link')\n  scrollspyLink = true;\n\n  @HostBinding('class.active')\n  active = false;\n\n  @HostListener('click', [])\n  onClick(): void {\n    if (this.section && this.scrollIntoView === true) {\n      this.section.scrollIntoView();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdRef.detectChanges();\n  }\n\n  assignSectionToId(): void {\n    this.section = this.document.documentElement.querySelector(`#${this.id}`);\n  }\n\n  ngOnInit(): void {\n    this.assignSectionToId();\n  }\n}\n","import { Injectable, QueryList } from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { Subject, Observable } from 'rxjs';\n\nexport interface MdbScrollspy {\n  id: string;\n  links: QueryList<MdbScrollspyLinkDirective>;\n}\n\n@Injectable()\nexport class MdbScrollspyService {\n  scrollSpys: MdbScrollspy[] = [];\n\n  private activeSubject = new Subject<MdbScrollspyLinkDirective>();\n  active$: Observable<any> = this.activeSubject;\n\n  addScrollspy(scrollSpy: MdbScrollspy): void {\n    this.scrollSpys.push(scrollSpy);\n  }\n\n  removeScrollspy(scrollSpyId: string): void {\n    const scrollSpyIndex = this.scrollSpys.findIndex((spy) => {\n      return spy.id === scrollSpyId;\n    });\n    this.scrollSpys.splice(scrollSpyIndex, 1);\n  }\n\n  updateActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    this.setActiveLink(activeLink);\n  }\n\n  removeActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    if (!activeLink) {\n      return;\n    }\n\n    activeLink.active = false;\n    activeLink.detectChanges();\n  }\n\n  setActiveLink(activeLink: MdbScrollspyLinkDirective | any): void {\n    if (activeLink) {\n      activeLink.active = true;\n      activeLink.detectChanges();\n      this.activeSubject.next(activeLink);\n    }\n  }\n\n  removeActiveLinks(scrollSpyId: string): void {\n    const scrollSpy: MdbScrollspy | undefined = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    scrollSpy.links.forEach((link) => {\n      link.active = false;\n      link.detectChanges();\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[mdbScrollspy]',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbScrollspyDirective implements OnInit, AfterContentInit, OnDestroy {\n  @ContentChildren(MdbScrollspyLinkDirective, { descendants: true })\n  links: QueryList<MdbScrollspyLinkDirective>;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  @Input('mdbScrollspy')\n  get id(): string {\n    return this._id;\n  }\n\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  private _id: string;\n\n  @Output() activeLinkChange: EventEmitter<any> = new EventEmitter<any>();\n\n  activeSub: Subscription;\n\n  constructor(private scrollSpyService: MdbScrollspyService) {}\n\n  ngOnInit(): void {\n    this.activeSub = this.scrollSpyService.active$\n      .pipe(takeUntil(this._destroy$), distinctUntilChanged())\n      .subscribe((activeLink) => {\n        this.activeLinkChange.emit(activeLink);\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.scrollSpyService.addScrollspy({ id: this.id, links: this.links });\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSpyService.removeScrollspy(this.id);\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { MdbScrollspyService } from './scrollspy.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyElement]',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class MdbScrollspyElementDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  @Input() container: HTMLElement;\n\n  @Input('mdbScrollspyElement')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.container.scrollTop;\n    const elTop = this.host.offsetTop - this.offset;\n    const elHeight = this.host.offsetHeight;\n\n    return scrollTop >= elTop && scrollTop < elTop + elHeight;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.removeActiveLinks(scrollSpyId);\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(this.container, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.host.id;\n\n    if (!this.container) {\n      this.container = this._getClosestEl(this.host, '.scrollspy-container');\n    }\n\n    this.renderer.setStyle(this.container, 'position', 'relative');\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Inject,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MdbScrollspyService } from './scrollspy.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyWindow]',\n})\nexport class MdbScrollspyWindowDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  @Input('mdbScrollspyWindow')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop;\n    const elHeight = this.el.nativeElement.offsetHeight;\n    const elTop = this.el.nativeElement.offsetTop - this.offset;\n    const elBottom = elTop + elHeight;\n\n    return scrollTop >= elTop && scrollTop <= elBottom;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    } else {\n      this.scrollSpyService.removeActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(window, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.el.nativeElement.id;\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MdbScrollspyDirective } from './scrollspy.directive';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyElementDirective } from './scrollspy-element.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { MdbScrollspyWindowDirective } from './scrollspy-window.directive';\n\n@NgModule({\n  declarations: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  exports: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  providers: [MdbScrollspyService],\n})\nexport class MdbScrollspyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Directive","ChangeDetectorRef","Inject","DOCUMENT","Input","HostBinding","HostListener","Subject","Injectable","EventEmitter","takeUntil","distinctUntilChanged","Component","ContentChildren","Output","ElementRef","Renderer2","NgZone","NgModule"],"mappings":"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"}