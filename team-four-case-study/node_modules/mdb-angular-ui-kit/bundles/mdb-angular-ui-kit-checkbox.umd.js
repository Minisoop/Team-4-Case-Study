(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/coercion'), require('@angular/core'), require('@angular/forms'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('mdb-angular-ui-kit/checkbox', ['exports', '@angular/cdk/coercion', '@angular/core', '@angular/forms', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['mdb-angular-ui-kit'] = global['mdb-angular-ui-kit'] || {}, global['mdb-angular-ui-kit'].checkbox = {}), global.ng.cdk.coercion, global.ng.core, global.ng.forms, global.ng.common));
}(this, (function (exports, coercion, core, forms, common) { 'use strict';

    var MDB_CHECKBOX_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define
        useExisting: core.forwardRef(function () { return MdbCheckboxDirective; }),
        multi: true,
    };
    var MdbCheckboxChange = /** @class */ (function () {
        function MdbCheckboxChange() {
        }
        return MdbCheckboxChange;
    }());
    var MdbCheckboxDirective = /** @class */ (function () {
        function MdbCheckboxDirective() {
            this._checked = false;
            this._value = null;
            this._disabled = false;
            this.checkboxChange = new core.EventEmitter();
            // Control Value Accessor Methods
            this.onChange = function (_) { };
            this.onTouched = function () { };
        }
        Object.defineProperty(MdbCheckboxDirective.prototype, "checked", {
            get: function () {
                return this._checked;
            },
            set: function (value) {
                this._checked = coercion.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MdbCheckboxDirective.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (value) {
                this._value = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MdbCheckboxDirective.prototype, "disabled", {
            get: function () {
                return this._disabled;
            },
            set: function (value) {
                this._disabled = coercion.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MdbCheckboxDirective.prototype, "isDisabled", {
            get: function () {
                return this._disabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(MdbCheckboxDirective.prototype, "isChecked", {
            get: function () {
                return this._checked;
            },
            enumerable: false,
            configurable: true
        });
        MdbCheckboxDirective.prototype.onCheckboxClick = function () {
            this.toggle();
        };
        MdbCheckboxDirective.prototype.onBlur = function () {
            this.onTouched();
        };
        Object.defineProperty(MdbCheckboxDirective.prototype, "changeEvent", {
            get: function () {
                var newChangeEvent = new MdbCheckboxChange();
                newChangeEvent.element = this;
                newChangeEvent.checked = this.checked;
                return newChangeEvent;
            },
            enumerable: false,
            configurable: true
        });
        MdbCheckboxDirective.prototype.toggle = function () {
            if (this.disabled) {
                return;
            }
            this._checked = !this._checked;
            this.onChange(this.checked);
            this.onCheckboxChange();
        };
        MdbCheckboxDirective.prototype.onCheckboxChange = function () {
            this.checkboxChange.emit(this.changeEvent);
        };
        MdbCheckboxDirective.prototype.writeValue = function (value) {
            this.value = value;
            this.checked = !!value;
        };
        MdbCheckboxDirective.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        MdbCheckboxDirective.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        MdbCheckboxDirective.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        return MdbCheckboxDirective;
    }());
    MdbCheckboxDirective.decorators = [
        { type: core.Directive, args: [{
                    // eslint-disable-next-line @angular-eslint/directive-selector
                    selector: '[mdbCheckbox]',
                    providers: [MDB_CHECKBOX_VALUE_ACCESSOR],
                },] }
    ];
    MdbCheckboxDirective.ctorParameters = function () { return []; };
    MdbCheckboxDirective.propDecorators = {
        checked: [{ type: core.Input, args: ['checked',] }],
        value: [{ type: core.Input, args: ['value',] }],
        disabled: [{ type: core.Input, args: ['disabled',] }],
        checkboxChange: [{ type: core.Output }],
        isDisabled: [{ type: core.HostBinding, args: ['disabled',] }],
        isChecked: [{ type: core.HostBinding, args: ['checked',] }],
        onCheckboxClick: [{ type: core.HostListener, args: ['click',] }],
        onBlur: [{ type: core.HostListener, args: ['blur',] }]
    };

    var MdbCheckboxModule = /** @class */ (function () {
        function MdbCheckboxModule() {
        }
        return MdbCheckboxModule;
    }());
    MdbCheckboxModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [MdbCheckboxDirective],
                    exports: [MdbCheckboxDirective],
                    imports: [common.CommonModule, forms.FormsModule],
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.MDB_CHECKBOX_VALUE_ACCESSOR = MDB_CHECKBOX_VALUE_ACCESSOR;
    exports.MdbCheckboxChange = MdbCheckboxChange;
    exports.MdbCheckboxDirective = MdbCheckboxDirective;
    exports.MdbCheckboxModule = MdbCheckboxModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=mdb-angular-ui-kit-checkbox.umd.js.map
