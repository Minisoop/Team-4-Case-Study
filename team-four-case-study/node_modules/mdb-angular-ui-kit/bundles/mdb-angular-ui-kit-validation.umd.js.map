{"version":3,"file":"mdb-angular-ui-kit-validation.umd.js","sources":["../../../projects/mdb-angular-ui-kit/validation/validate.directive.ts","../../../projects/mdb-angular-ui-kit/validation/error.directive.ts","../../../projects/mdb-angular-ui-kit/validation/success.directive.ts","../../../projects/mdb-angular-ui-kit/validation/validation.module.ts","../../../projects/mdb-angular-ui-kit/validation/mdb-angular-ui-kit-validation.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbValidate]',\n})\nexport class MdbValidateDirective implements OnInit {\n  private _validate = true;\n  private _validateSuccess = true;\n  private _validateError = true;\n\n  @Input()\n  get mdbValidate(): boolean {\n    return this._mdbValidate;\n  }\n  set mdbValidate(value: boolean) {\n    this._mdbValidate = coerceBooleanProperty(value);\n  }\n  private _mdbValidate: boolean;\n\n  @Input()\n  get validate(): boolean {\n    return this._validate;\n  }\n  set validate(value: boolean) {\n    this._validate = coerceBooleanProperty(value);\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateSuccess(): boolean {\n    return this._validateSuccess;\n  }\n  set validateSuccess(value: boolean) {\n    this._validateSuccess = coerceBooleanProperty(value);\n    this.updateSuccessClass();\n  }\n\n  @Input()\n  get validateError(): boolean {\n    return this._validateError;\n  }\n  set validateError(value: boolean) {\n    this._validateError = coerceBooleanProperty(value);\n    this.updateErrorClass();\n    this.updateSuccessClass();\n  }\n\n  constructor(private renderer: Renderer2, private _elementRef: ElementRef) {}\n\n  updateSuccessClass(): void {\n    if (this.validate && this.validateSuccess) {\n      this.renderer.addClass(this._elementRef.nativeElement, 'validate-success');\n    } else {\n      this.renderer.removeClass(this._elementRef.nativeElement, 'validate-success');\n    }\n  }\n\n  updateErrorClass(): void {\n    if (this.validate && this.validateError) {\n      this.renderer.addClass(this._elementRef.nativeElement, 'validate-error');\n    } else {\n      this.renderer.removeClass(this._elementRef.nativeElement, 'validate-error');\n    }\n  }\n\n  ngOnInit(): void {\n    this.updateSuccessClass();\n    this.updateErrorClass();\n  }\n\n  static ngAcceptInputType_mdbValidate: BooleanInput;\n  static ngAcceptInputType_validate: BooleanInput;\n  static ngAcceptInputType_validateSuccess: BooleanInput;\n  static ngAcceptInputType_validateError: BooleanInput;\n}\n","import {\n  Input,\n  HostBinding,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Component,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nlet defaultIdNumber = 0;\n\n@Component({\n  selector: 'mdb-error',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbErrorDirective implements OnInit, OnDestroy {\n  @Input() id = `mdb-error-${defaultIdNumber++}`;\n\n  @HostBinding('class.error-message') errorMsg = true;\n  @HostBinding('attr.id') messageId = this.id;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {}\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n\n  ngOnInit(): void {\n    const textarea = this._getClosestEl(this._elementRef.nativeElement, 'textarea');\n\n    if (textarea) {\n      let height = textarea.offsetHeight + 4 + 'px';\n      this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n\n      fromEvent(textarea, 'keyup')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(() => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import {\n  Input,\n  HostBinding,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  Component,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nlet defaultIdNumber = 0;\n\n@Component({\n  selector: 'mdb-success',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbSuccessDirective implements OnInit, OnDestroy {\n  @Input() id = `mdb-success-${defaultIdNumber++}`;\n\n  @HostBinding('class.success-message') successMsg = true;\n  @HostBinding('attr.id') messageId = this.id;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {}\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n\n  ngOnInit(): void {\n    const textarea = this._getClosestEl(this._elementRef.nativeElement, 'textarea');\n\n    if (textarea) {\n      let height = textarea.offsetHeight + 4 + 'px';\n      this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n\n      fromEvent(textarea, 'keyup')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(() => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this._elementRef.nativeElement, 'top', height);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MdbErrorDirective } from './error.directive';\nimport { MdbSuccessDirective } from './success.directive';\nimport { MdbValidateDirective } from './validate.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective],\n  exports: [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective],\n})\nexport class MdbValidationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["coerceBooleanProperty","Directive","Renderer2","ElementRef","Input","defaultIdNumber","Subject","fromEvent","takeUntil","Component","HostBinding","NgModule","CommonModule"],"mappings":"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"}